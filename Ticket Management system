<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ticket Management System</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-gray-100 min-h-screen flex flex-col items-center py-10">

  <h1 class="text-3xl font-bold mb-6">ðŸŽ« Ticket Management System</h1>

  <!-- Ticket Form -->
  <div class="bg-gray-800 p-6 rounded-2xl shadow-md w-96 mb-6">
    <h2 class="text-xl font-semibold mb-4">Add New Ticket</h2>
    <form id="ticketForm" class="flex flex-col space-y-4">
      <input type="text" id="title" placeholder="Title" required
             class="p-2 rounded bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-blue-500">
      <textarea id="description" placeholder="Description" required
                class="p-2 rounded bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
      <button type="submit"
              class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded-lg shadow">
        Add Ticket
      </button>
    </form>
  </div>

  <!-- Ticket List -->
  <div class="w-11/12 md:w-3/4">
    <h2 class="text-xl font-semibold mb-4">Tickets</h2>
    <table class="w-full border-collapse">
      <thead>
        <tr class="bg-gray-700">
          <th class="border border-gray-600 px-4 py-2">ID</th>
          <th class="border border-gray-600 px-4 py-2">Title</th>
          <th class="border border-gray-600 px-4 py-2">Description</th>
          <th class="border border-gray-600 px-4 py-2">Status</th>
          <th class="border border-gray-600 px-4 py-2">Actions</th>
        </tr>
      </thead>
      <tbody id="ticketTable" class="text-center">
        <!-- Tickets will be inserted here -->
      </tbody>
    </table>
  </div>

  <!-- Show Info Button -->
  <div class="mt-6">
    <button onclick="showInfo()" 
            class="bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-lg shadow">
      Show All Ticket Information
    </button>
  </div>

  <script>
    let tickets = [];
    let ticketId = 1;

    const form = document.getElementById("ticketForm");
    const table = document.getElementById("ticketTable");

    // Add Ticket
    form.addEventListener("submit", (e) => {
      e.preventDefault();

      const title = document.getElementById("title").value;
      const description = document.getElementById("description").value;

      const newTicket = {
        id: ticketId++,
        title,
        description,
        status: "Open"
      };

      tickets.push(newTicket);
      form.reset();
      renderTickets();
    });

    // Render Tickets
    function renderTickets() {
      table.innerHTML = "";
      tickets.forEach((ticket) => {
        const row = document.createElement("tr");
        row.classList.add("bg-gray-800", "hover:bg-gray-700");

        row.innerHTML = `
          <td class="border border-gray-600 px-4 py-2">${ticket.id}</td>
          <td class="border border-gray-600 px-4 py-2">${ticket.title}</td>
          <td class="border border-gray-600 px-4 py-2">${ticket.description}</td>
          <td class="border border-gray-600 px-4 py-2">${ticket.status}</td>
          <td class="border border-gray-600 px-4 py-2 space-x-2">
            <button onclick="updateStatus(${ticket.id})" 
                    class="bg-yellow-500 hover:bg-yellow-600 text-white px-2 py-1 rounded">
              Update
            </button>
            <button onclick="deleteTicket(${ticket.id})" 
                    class="bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded">
              Delete
            </button>
          </td>
        `;
        table.appendChild(row);
      });
    }

    // Update Status
    function updateStatus(id) {
      const ticket = tickets.find(t => t.id === id);
      if (ticket) {
        if (ticket.status === "Open") ticket.status = "In Progress";
        else if (ticket.status === "In Progress") ticket.status = "Closed";
        else ticket.status = "Open"; // cycle back
      }
      renderTickets();
    }

    // Delete Ticket
    function deleteTicket(id) {
      tickets = tickets.filter(t => t.id !== id);
      renderTickets();
    }

    // Show All Information
    function showInfo() {
      if (tickets.length === 0) {
        alert("No tickets available!");
        return;
      }
      let info = "=== Ticket Information ===\n\n";
      tickets.forEach(t => {
        info += `ID: ${t.id}\nTitle: ${t.title}\nDescription: ${t.description}\nStatus: ${t.status}\n\n`;
      });
      alert(info);
    }
  </script>

</body>
</html>
